{"abi":[{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"},"rawMetadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"forked from https://github.com/OpenZeppelin/openzeppelin-contracts/blob/7c5f6bc2c8743d83443fa46395d75f2f3f99054a/contracts/access/Ownable.sol Modifications: 1. Update Solidity version from 0.8.0 to 0.7.6 (11/9/2022). (v8 was used as base because it includes internal _transferOwnership method.) 2. Remove renounceOwnership function Description Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/roles/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":false},\"runs\":200},\"remappings\":[\":@memview-sol/=lib/memview-sol/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":centre-tokens.git/=lib/centre-tokens.git/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":memview-sol/=lib/memview-sol/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"src/roles/Ownable.sol\":{\"keccak256\":\"0x4b675058095169e2aa938936232e4516b00ae55b6051725cec0d066fa4eb01be\",\"urls\":[\"bzz-raw://125d1b051badf05d6ea4bdf30360e7afb1c858c96b69f970e21d1aee709047fc\",\"dweb:/ipfs/QmWHt7H9Dcc6RMhPHHkZe2VkPSrQV9HJQ1ddCAwC2r84an\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.7.6+commit.7338295f"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"previousOwner","type":"address","indexed":true},{"internalType":"address","name":"newOwner","type":"address","indexed":true}],"type":"event","name":"OwnershipTransferred","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferOwnership"}],"devdoc":{"kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@memview-sol/=lib/memview-sol/","@openzeppelin/=lib/openzeppelin-contracts/","centre-tokens.git/=lib/centre-tokens.git/","ds-test/=lib/ds-test/src/","forge-std/=lib/forge-std/src/","memview-sol/=lib/memview-sol/contracts/","openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/"],"optimizer":{"runs":200,"details":{"peephole":false,"jumpdestRemover":false,"orderLiterals":false,"deduplicate":false,"cse":false,"constantOptimizer":false,"yul":false}},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/roles/Ownable.sol":"Ownable"},"evmVersion":"istanbul","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0","urls":["bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f","dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96"],"license":"MIT"},"src/roles/Ownable.sol":{"keccak256":"0x4b675058095169e2aa938936232e4516b00ae55b6051725cec0d066fa4eb01be","urls":["bzz-raw://125d1b051badf05d6ea4bdf30360e7afb1c858c96b69f970e21d1aee709047fc","dweb:/ipfs/QmWHt7H9Dcc6RMhPHHkZe2VkPSrQV9HJQ1ddCAwC2r84an"],"license":null}},"version":1},"ast":{"absolutePath":"src/roles/Ownable.sol","id":28974,"exportedSymbols":{"Context":[25783],"Ownable":[28973]},"nodeType":"SourceUnit","src":"619:2519:28","nodes":[{"id":28876,"nodeType":"PragmaDirective","src":"619:22:28","nodes":[],"literals":["solidity","0.7",".6"]},{"id":28877,"nodeType":"ImportDirective","src":"643:51:28","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Context.sol","file":"@openzeppelin/contracts/utils/Context.sol","scope":28974,"sourceUnit":25784,"symbolAliases":[],"unitAlias":""},{"id":28973,"nodeType":"ContractDefinition","src":"1556:1581:28","nodes":[{"id":28882,"nodeType":"VariableDeclaration","src":"1599:22:28","nodes":[],"constant":false,"mutability":"mutable","name":"_owner","scope":28973,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28881,"name":"address","nodeType":"ElementaryTypeName","src":"1599:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"id":28888,"nodeType":"EventDefinition","src":"1628:106:28","nodes":[],"anonymous":false,"name":"OwnershipTransferred","parameters":{"id":28887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28884,"indexed":true,"mutability":"mutable","name":"previousOwner","nodeType":"VariableDeclaration","scope":28888,"src":"1664:29:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28883,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":28886,"indexed":true,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":28888,"src":"1703:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28885,"name":"address","nodeType":"ElementaryTypeName","src":"1703:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1654:79:28"}},{"id":28898,"nodeType":"FunctionDefinition","src":"1836:63:28","nodes":[],"body":{"id":28897,"nodeType":"Block","src":"1850:49:28","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":28893,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25771,"src":"1879:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":28894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1879:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":28892,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28972,"src":"1860:18:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":28895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1860:32:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28896,"nodeType":"ExpressionStatement","src":"1860:32:28"}]},"documentation":{"id":28889,"nodeType":"StructuredDocumentation","src":"1740:91:28","text":" @dev Initializes the contract setting the deployer as the initial owner."},"implemented":true,"kind":"constructor","modifiers":[],"name":"","parameters":{"id":28890,"nodeType":"ParameterList","parameters":[],"src":"1847:2:28"},"returnParameters":{"id":28891,"nodeType":"ParameterList","parameters":[],"src":"1850:0:28"},"scope":28973,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":28906,"nodeType":"ModifierDefinition","src":"1987:62:28","nodes":[],"body":{"id":28905,"nodeType":"Block","src":"2008:41:28","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":28901,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28929,"src":"2018:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":28902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2018:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28903,"nodeType":"ExpressionStatement","src":"2018:13:28"},{"id":28904,"nodeType":"PlaceholderStatement","src":"2041:1:28"}]},"documentation":{"id":28899,"nodeType":"StructuredDocumentation","src":"1905:77:28","text":" @dev Throws if called by any account other than the owner."},"name":"onlyOwner","parameters":{"id":28900,"nodeType":"ParameterList","parameters":[],"src":"2005:2:28"},"virtual":false,"visibility":"internal"},{"id":28915,"nodeType":"FunctionDefinition","src":"2125:85:28","nodes":[],"body":{"id":28914,"nodeType":"Block","src":"2180:30:28","nodes":[],"statements":[{"expression":{"id":28912,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28882,"src":"2197:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":28911,"id":28913,"nodeType":"Return","src":"2190:13:28"}]},"documentation":{"id":28907,"nodeType":"StructuredDocumentation","src":"2055:65:28","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","implemented":true,"kind":"function","modifiers":[],"name":"owner","parameters":{"id":28908,"nodeType":"ParameterList","parameters":[],"src":"2139:2:28"},"returnParameters":{"id":28911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28910,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":28915,"src":"2171:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28909,"name":"address","nodeType":"ElementaryTypeName","src":"2171:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2170:9:28"},"scope":28973,"stateMutability":"view","virtual":true,"visibility":"public"},{"id":28929,"nodeType":"FunctionDefinition","src":"2283:130:28","nodes":[],"body":{"id":28928,"nodeType":"Block","src":"2328:85:28","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":28924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":28920,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28915,"src":"2346:5:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":28921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2346:7:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":28922,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25771,"src":"2357:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":28923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2357:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"2346:23:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":28925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2371:34:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":28919,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2338:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":28926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2338:68:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28927,"nodeType":"ExpressionStatement","src":"2338:68:28"}]},"documentation":{"id":28916,"nodeType":"StructuredDocumentation","src":"2216:62:28","text":" @dev Throws if the sender is not the owner."},"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","parameters":{"id":28917,"nodeType":"ParameterList","parameters":[],"src":"2303:2:28"},"returnParameters":{"id":28918,"nodeType":"ParameterList","parameters":[],"src":"2328:0:28"},"scope":28973,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":28952,"nodeType":"FunctionDefinition","src":"2562:232:28","nodes":[],"body":{"id":28951,"nodeType":"Block","src":"2632:162:28","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":28943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":28938,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28932,"src":"2663:8:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":28941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2683:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":28940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2675:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":28939,"name":"address","nodeType":"ElementaryTypeName","src":"2675:7:28","typeDescriptions":{}}},"id":28942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2675:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"2663:22:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":28944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2699:40:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":28937,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2642:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":28945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2642:107:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28946,"nodeType":"ExpressionStatement","src":"2642:107:28"},{"expression":{"arguments":[{"id":28948,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28932,"src":"2778:8:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":28947,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28972,"src":"2759:18:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":28949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2759:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28950,"nodeType":"ExpressionStatement","src":"2759:28:28"}]},"documentation":{"id":28930,"nodeType":"StructuredDocumentation","src":"2419:138:28","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","implemented":true,"kind":"function","modifiers":[{"id":28935,"modifierName":{"id":28934,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28906,"src":"2622:9:28","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"2622:9:28"}],"name":"transferOwnership","parameters":{"id":28933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28932,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":28952,"src":"2589:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28931,"name":"address","nodeType":"ElementaryTypeName","src":"2589:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2588:18:28"},"returnParameters":{"id":28936,"nodeType":"ParameterList","parameters":[],"src":"2632:0:28"},"scope":28973,"stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":28972,"nodeType":"FunctionDefinition","src":"2948:187:28","nodes":[],"body":{"id":28971,"nodeType":"Block","src":"3011:124:28","nodes":[],"statements":[{"assignments":[28959],"declarations":[{"constant":false,"id":28959,"mutability":"mutable","name":"oldOwner","nodeType":"VariableDeclaration","scope":28971,"src":"3021:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28958,"name":"address","nodeType":"ElementaryTypeName","src":"3021:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":28961,"initialValue":{"id":28960,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28882,"src":"3040:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3021:25:28"},{"expression":{"id":28964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":28962,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28882,"src":"3056:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":28963,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28955,"src":"3065:8:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3056:17:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":28965,"nodeType":"ExpressionStatement","src":"3056:17:28"},{"eventCall":{"arguments":[{"id":28967,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28959,"src":"3109:8:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":28968,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28955,"src":"3119:8:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":28966,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28888,"src":"3088:20:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":28969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3088:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28970,"nodeType":"EmitStatement","src":"3083:45:28"}]},"documentation":{"id":28953,"nodeType":"StructuredDocumentation","src":"2800:143:28","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","parameters":{"id":28956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28955,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":28972,"src":"2976:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28954,"name":"address","nodeType":"ElementaryTypeName","src":"2976:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2975:18:28"},"returnParameters":{"id":28957,"nodeType":"ParameterList","parameters":[],"src":"3011:0:28"},"scope":28973,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"abstract":true,"baseContracts":[{"baseName":{"id":28879,"name":"Context","nodeType":"UserDefinedTypeName","referencedDeclaration":25783,"src":"1585:7:28","typeDescriptions":{"typeIdentifier":"t_contract$_Context_$25783","typeString":"contract Context"}},"id":28880,"nodeType":"InheritanceSpecifier","src":"1585:7:28"}],"contractDependencies":[25783],"contractKind":"contract","documentation":{"id":28878,"nodeType":"StructuredDocumentation","src":"696:859:28","text":" @dev forked from https://github.com/OpenZeppelin/openzeppelin-contracts/blob/7c5f6bc2c8743d83443fa46395d75f2f3f99054a/contracts/access/Ownable.sol\n Modifications:\n 1. Update Solidity version from 0.8.0 to 0.7.6 (11/9/2022). (v8 was used\n as base because it includes internal _transferOwnership method.)\n 2. Remove renounceOwnership function\n Description\n Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"linearizedBaseContracts":[28973,25783],"name":"Ownable","scope":28974}]},"id":28}